#include <Wire.h>
#include <ArduinoBLE.h>
#include "MAX30105.h"
#include "heartRate.h"


MAX30105 hrSensor;


// Constants for heart rate averaging
const byte RATE_SIZE = 4;
byte rates[RATE_SIZE];
byte rateSpot = 0;
long lastBeat = 0;


float beatsPerMinute;
int beatAvg;


// BLE Service and Characteristic
BLEService heartRateService("180D");
BLECharacteristic heartRateChar("2A37", BLERead | BLENotify, 2);


void setup() {
  Serial.begin(115200);
  while (!Serial);


  Wire.begin();


  // Initialize MAX30102
  if (!hrSensor.begin(Wire, I2C_SPEED_STANDARD)) {
    Serial.println("MAX30102 not found. Check wiring!");
    while (1);
  }


  Serial.println("MAX30102 connected!");
  hrSensor.setup();
  hrSensor.setPulseAmplitudeRed(0xF1);
  hrSensor.setPulseAmplitudeGreen(0);


  // Initialize BLE
  if (!BLE.begin()) {
    Serial.println("Starting BLE failed!");
    while (1);
  }


  BLE.setLocalName("Nano33BLE_HR");
  BLE.setAdvertisedService(heartRateService);
  heartRateService.addCharacteristic(heartRateChar);
  BLE.addService(heartRateService);


  BLE.advertise();
  Serial.println("BLE Heart Rate Monitor ready, waiting for connection...");
}


void loop() {
  BLEDevice central = BLE.central();


  if (central) {
    Serial.print("Connected to central: ");
    Serial.println(central.address());


    while (central.connected()) {
      long irValue = hrSensor.getIR();


      if (irValue < 3000) {
        // No finger detected â€” skip processing
        delay(200);
        continue;
      }


      if (checkForBeat(irValue)) {
        long delta = millis() - lastBeat;
        lastBeat = millis();


        beatsPerMinute = 60 / (delta / 1000.0);


        if (beatsPerMinute < 255 && beatsPerMinute > 20) {
          rates[rateSpot++] = (byte)beatsPerMinute;
          rateSpot %= RATE_SIZE;


          beatAvg = 0;
          for (byte x = 0; x < RATE_SIZE; x++) {
            beatAvg += rates[x];
          }
          beatAvg /= RATE_SIZE;
        }


        // Print results
        Serial.print("BPM = ");
        Serial.print(beatsPerMinute);
        Serial.print("\tAvg BPM = ");
        Serial.println(beatAvg);


        // Send value over BLE
        byte hrData[2] = {0x00, (byte)beatAvg};
        heartRateChar.writeValue(hrData, 2);


        delay(100);
      }
    }


    // Handle disconnection
    Serial.println("Central disconnected. Restarting advertising...");
    BLE.advertise();
  }
}
